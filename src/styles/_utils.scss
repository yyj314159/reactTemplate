/**            UTILS              **/

// Util Components
// ----------------------------

.transition-height {
  @include transition(height 0.15s ease-in-out);
}

/**
 * .circle & .rounded are pretty cool way to add a bit of beauty to raw data.
 * should be used with bg-* and text-* classes for colors.
 */
.circle,
.circle-o {
  display: inline-block;
  width: #{$line-height-base}em;
  height: #{$line-height-base}em;
  line-height: #{$line-height-base}em;
  text-align: center;
}

.circle,
.circle-o {
  @include border-radius(50%);
}

.circle-lg {
  width: 2.2em;
  height: 2.2em;
  line-height: 2.2em;
}

.circle-o {
  border: #{$line-height-base/5}em solid transparent;

  // stylelint-disable
  &.circle-o-danger { border-color: theme-color('danger') };
  &.circle-o-warning { border-color: theme-color('warning') };
  &.circle-o-success { border-color: theme-color('success') };
  &.circle-o-info { border-color: theme-color('info') };
  &.circle-o-primary { border-color: theme-color('primary') };
  &.circle-o-black { border-color: $black };
  &.circle-o-gray-darker { border-color: $gray-900 };
  &.circle-o-gray-dark { border-color: $gray-800 };
  &.circle-o-gray { border-color: $gray-700 };
  &.circle-o-gray-light { border-color: $gray-600 };
  &.circle-o-gray-lighter { border-color: $gray-200 };
  &.circle-o-white { border-color: $white };
  // stylelint-enable
}

@include thumb('.thumb-lg', 60px);
@include thumb('.thumb', 48px);
@include thumb('.thumb-sm', 34px);
@include thumb('.thumb-xs', 28px);

.thumb-xs,
.thumb-sm,
.thumb-lg,
.thumb {
  position: relative;
  display: inline-block;
  text-align: center;

  img {
    height: auto;
    max-width: 100%;
    vertical-align: middle;
  }

  .status {
    position: absolute;
    top: 0;
    left: 0;
    display: inline-block;
    width: 0.7em;
    height: 0.7em;
    border: 0.15em solid $white;
    border-radius: 50%;

    &.status-bottom {
      top: auto;
      left: auto;
      bottom: 0;
      right: 0;
    }
  }
}

.text-ellipsis {
  display: block;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis;
}

.thin-scroll {
  &::-webkit-scrollbar {
    height: 8px;
    width: 8px;
  }

  &::-webkit-scrollbar:hover {
    background-color: #e9e9e9;
    border: none;
  }

  &::-webkit-scrollbar-thumb {
    border: none;
    background-color: rgba(0, 0, 0, 0.2);

    @include box-shadow(inset 1px 1px 0 rgba(0, 0, 0, 0.1));
  }

  &::-webkit-scrollbar-thumb:hover {
    background-color: $gray-400;
  }
}

@include keyframes('bg-attention') {
  0% {
    background-color: lighten(theme-color('warning'), 43%);
  }

  5% {
    background-color: lighten(theme-color('warning'), 33%);
  }

  0% {
    background-color: rgba(0, 0, 0, 0);
  }
}

.bg-attention {
  animation: bg-attention 10s;
}

/* .h* + .fw-bold */
$font-sizes: 54px, $h1-font-size, $h2-font-size, $h3-font-size, $h4-font-size, $h5-font-size, $h6-font-size;
$i: 0;

@each $font-size in $font-sizes {
  .value#{$i} {
    margin: 0;
    font-size: $font-size;
    font-weight: $font-weight-semi-bold;
  }
  $i: $i + 1 !global;
}

// Style Classes
// ----------------------------

.text-align-center {
  text-align: center;
}

.text-align-right {
  text-align: right;
}

.no-margin {
  margin: 0;
}

$margin-vertical-variants: (xlg: 40px, lg: $spacer*3/2, md: $spacer, sm: $spacer/2, xs: $spacer/4, 0: 0);
$margin-horizontal-variants: (lg: 20px, md: 15px, sm: 10px, xs: 5px, 0: 0);

@include property-variants('.mt', 'margin-top', $margin-vertical-variants);
@include property-variants('.mb', 'margin-bottom', $margin-vertical-variants);
@include property-variants('.ml', 'margin-left', $margin-horizontal-variants);
@include property-variants('.mr', 'margin-right', $margin-horizontal-variants);

.no-padding {
  padding: 0;
}

$display-variants: (inline: inline, inline-block: inline-block, block: block);

@include property-variants('.display', 'display', $display-variants);

$width-variants: (50: 50px, 100: 100px, 150: 150px, 200: 200px);

@include property-variants('.width', 'width', $width-variants);

$height-variants: (50: 50px, 100: 100px, 150: 150px, 200: 200px, 250: 250px);

@include property-variants('.height', 'height', $height-variants);
@include property-variants('.max-height', 'max-height', $height-variants);

$opacity-variants: (10: 0.1, 20: 0.2, 30: 0.3, 40: 0.4, 50: 0.5, 60: 0.6, 70: 0.7, 80: 0.8, 90: 0.9);

@include property-variants('.opacity', 'opacity', $opacity-variants);

$z-index-variants: (more: 1, less: -1);

@include property-variants('.z-index', 'z-index', $z-index-variants);

.no-border {
  border: none;
}

.bt { border-top: 1px solid $gray-300; }
.br { border-right: 1px solid $gray-300; }
.bb { border-bottom: 1px solid $gray-300; }
.bl { border-left: 1px solid $gray-300; }

.overflow-hidden {
  overflow: hidden;
}

.fw-semi-bold {
  font-weight: $font-weight-semi-bold;
}

.fw-normal {
  font-weight: $font-weight-normal;
}

.fw-bold {
  font-weight: $font-weight-bold;
}

.fw-thin {
  font-weight: $font-weight-thin;
}

.rotate-45 {
  @include rotate(45deg);
}

.rotate-135 {
  @include rotate(135deg);
}

.rotate-225 {
  @include rotate(225deg);
}

.rotate-315 {
  @include rotate(315deg);
}

// Text & Background Variations
// ----------------------------

//copy bg classes after bootstrap so it's possible to overload other bootstrap classes

@include bg-variant('.bg-body', $body-bg);
@include bg-variant('.bg-gray', $gray-600);
@include bg-variant('.bg-gray-transparent', rgba($gray-600, 0.6));
@include bg-variant('.bg-gray-dark', $gray-700);
@include bg-variant('.bg-black', $black);
@include bg-variant('.bg-gray-light', $gray-400);
@include bg-variant('.bg-blue-light', rgba(0,0,0,0.15));
@include bg-variant('.bg-gray-lighter', $gray-200);
@include bg-variant('.bg-transparent', rgba(0,0,0,0));
@include bg-variant('.bg-white', $white);
@include bg-variant('.bg-inverse', $widget-color);

.bg-body,
.bg-body-light,
.bg-gray,
.bg-gray-transparent,
.bg-transparent,
.bg-primary,
.bg-success,
.bg-warning,
.bg-danger,
.bg-info {
  @include transition(background-color 0.15s ease-in-out);
}

@include text-emphasis-variant('.text-white', $white);
@include text-emphasis-variant('.text-gray', $gray-600);
@include text-emphasis-variant('.text-gray-dark', $gray-700);
@include text-emphasis-variant('.text-gray-light', $gray-400);
@include text-emphasis-variant('.text-semi-muted', $gray-500);
@include text-emphasis-variant('.text-gray-darker', $gray-900);
@include text-emphasis-variant('.text-gray-lighter', $gray-200);
@include text-emphasis-variant('.text-green', $green);
@include text-emphasis-variant('.text-orange', $orange);
@include text-emphasis-variant('.text-red', $red);

.text-light {
  opacity: 0.8;
}

.fs-mini {
  font-size: $font-size-mini;
}

.fs-sm {
  font-size: $font-size-sm;
}

.btlr {
  border-top-left-radius: $border-radius-base;
}

.btrr {
  border-top-right-radius: $border-radius-base;
}

.bblr {
  border-bottom-left-radius: $border-radius-base;
}

.bbrr {
  border-bottom-right-radius: $border-radius-base;
}

.d-sm-none-down {
  @media (max-width: breakpoint-max(sm)) {
    display: none !important;
  }
}

.d-md-none-down {
  @media (max-width: breakpoint-max(md)) {
    display: none !important;
  }
}

.chart-overflow-bottom {
  margin: 0 (-$widget-padding-horizontal) (-$widget-padding-vertical);
}

@each $breakpoint in map-keys($grid-breakpoints) {
  @include media-breakpoint-down($breakpoint) {
    $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

    .d#{$infix}-down-none { display: none !important; }
    .d#{$infix}-down-inline { display: inline !important; }
    .d#{$infix}-down-inline-block { display: inline-block !important; }
    .d#{$infix}-down-block { display: block !important; }
    .d#{$infix}-down-table { display: table !important; }
    .d#{$infix}-down-table-cell { display: table-cell !important; }
    .d#{$infix}-down-flex { display: flex !important; }
    .d#{$infix}-down-inline-flex { display: inline-flex !important; }
  }
}
